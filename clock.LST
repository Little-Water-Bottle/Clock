C51 COMPILER V9.01   CLOCK                                                                 03/05/2021 19:39:37 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE CLOCK
OBJECT MODULE PLACED IN clock.OBJ
COMPILER INVOKED BY: D:\App_program\Keil4\keil4\install_location\C51\BIN\C51.EXE clock.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "reg52.h"
   2          #include "intrins.h"
   3          typedef unsigned int u16;         //对数据类型进行声明定义
   4          typedef unsigned char u8;
   5          
   6          #define GPIO_KEY P1     //定义矩阵按键
   7          u8 KeyValue;    //用来存放读取到的键值
   8          
   9          //接入3-8译码器，选择要点亮的灯
  10          sbit LSA=P2^2;
  11          sbit LSB=P2^3;
  12          sbit LSC=P2^4;
  13          
  14          sbit beep=P1^5;  //蜂鸣器
  15          
  16          sbit button1 = P3^1;    //设置
  17          sbit button2 = P3^0;    //加按键
  18          sbit button3 = P3^2;    //减按键
  19          sbit button4 = P3^3;    //确认按键
  20          
  21          //定义按键按下的次数，不同次数选择不同设置
  22          static char button_num1 = 0;    //判断选则时分秒
  23          
  24          u8 code smgduan[]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,
  25                                                  0x7f,0x6f};//显示0~9的
  26          
  27          //num1:秒初始值 num2:分初始值 num3:时初始值
  28          u16 num1=55,num2=59,num3=13;
  29          //闹铃时间
  30          u16 num11=59,num22=59,num33=23;
  31          
  32          //串口接收的数据
  33          u8 receive1=0,receive2=0,receive3=0,receive4=0,receive5=0;
  34          
  35          
  36          static int i = 0;
  37          
  38          //函数声明
  39          void KeyDown(void);
  40          
  41          /***********************************************************
  42          *函数名         ：delay
  43          *功能           ：延时
  44          *参数           ：i 延时多少个us
  45          ************************************************************/
  46          void delay(u16 i)
  47          {
  48   1              while(i--);
  49   1      }
  50          
  51          /***********************************************************
  52          *函数名         ：delay_us
  53          *功能           ：延时
  54          *参数           ：i 延时的us数
  55          ************************************************************/
C51 COMPILER V9.01   CLOCK                                                                 03/05/2021 19:39:37 PAGE 2   

  56          void delay_us(int i)
  57          {
  58   1              while(i--);
  59   1      }
  60          
  61          /*******************************************************************************
  62          * 函 数 名         : button_setting
  63          * 函数功能                 : 实现按键设置/确认功能，按四下设置完毕 重新开始计数
  64          * 参数                     ：无
  65          *******************************************************************************/
  66          void button_setting()
  67          {       
  68   1              //进行设置
  69   1              if(button1 == 0 || receive1 == 1) 
  70   1              {
  71   2                      receive1 = 0;   //清除标志位
  72   2                      delay_us(10);   
  73   2                      while(!button1);        //直到松开才向下执行
  74   2      
  75   2                      button_num1++;  //选择设置不同位（时 分 秒）
  76   2                      if(button_num1 == 4)
  77   2                      {
  78   3                              button_num1 = 1;        //将被设置位定位到 秒
  79   3                      }
  80   2                      
  81   2                      ET0=0;
  82   2                      //如果是闹钟状态则定时器不关闭
  83   2                      if(KeyValue == 1)
  84   2                      {
  85   3                              ET0=1;  //打开定时器中断
  86   3                              //EA = 1;
  87   3                      }
  88   2      //              else if(butt)
  89   2      //              {
  90   2      //                      ET0=0;  //关闭定时器中断
  91   2      //                      //EA = 0;       //关闭总中断，停止计时
  92   2      //              }       
  93   2                                      
  94   2              }
  95   1      
  96   1              //确认设置
  97   1              if(button4 == 0 || receive4 == 1)
  98   1              {
  99   2                      receive4 = 0;
 100   2                      receive5 = 0;
 101   2                      delay_us(10);
 102   2                      while(!button4);        //直到松开才向下执行
 103   2                      button_num1 = 0;        //取消设置
 104   2                      //EA=1; //开中断
 105   2                      ET0=1;   //开定时器中断
 106   2                      KeyValue = 0;   //闹钟标志清零                          
 107   2              }
 108   1      }
 109          
 110          
 111          /*******************************************************************************
 112          * 函 数 名         : button_up_down
 113          * 函数功能                 : 时间加/减 按键逻辑处理
 114          * 参数                     ：无
 115          *******************************************************************************/
 116          void button_up_down()
 117          {
C51 COMPILER V9.01   CLOCK                                                                 03/05/2021 19:39:37 PAGE 3   

 118   1              //增加
 119   1              if(button2 == 0 || receive2 == 1)
 120   1              {
 121   2                      receive2 = 0;
 122   2                      if(KeyValue == 1 || receive5 == 1)
 123   2                      {
 124   3                              switch(button_num1)
 125   3                              {
 126   4                                      case 0: break;
 127   4                                      case 1: delay_us(10); while(~button2); num11++;  break;         //等待按键释放  时加一
 128   4                                      case 2: delay_us(10); while(~button2); num22++; break;          //等待按键释放  分加一
 129   4                                      case 3: delay_us(10); while(~button2); num33++; break;          //等待按键释放  秒加一
 130   4                                      default: break; 
 131   4                              }       
 132   3                      }
 133   2                      else
 134   2                      {
 135   3                              switch(button_num1)
 136   3                              {
 137   4                                      case 0: break;
 138   4                                      case 1: delay_us(10); while(~button2); num1++;  break;          //等待按键释放  时加一
 139   4                                      case 2: delay_us(10); while(~button2); num2++;  break;          //等待按键释放  分加一
 140   4                                      case 3: delay_us(10); while(~button2); num3++;  break;          //等待按键释放  秒加一
 141   4                                      default: break; 
 142   4                              }       
 143   3                      }
 144   2      
 145   2                      if(num3 == 24) num3 = 0;        //超出归零
 146   2                      if(num2 == 60) num2 = 0;
 147   2                      if(num1 == 60) num1 = 0;
 148   2                      if(num33 == 24) num33 = 0;      //超出归零
 149   2                      if(num22 == 60) num22 = 0;
 150   2                      if(num11 == 60) num11 = 0;      
 151   2              }
 152   1      
 153   1              //减少
 154   1              if(button3 == 0  || receive3 == 1)
 155   1              {
 156   2                      receive3 = 0;
 157   2                      if(KeyValue == 1 || receive5 == 1)
 158   2                      {
 159   3                              switch(button_num1)
 160   3                              {
 161   4                                      case 0:         break;
 162   4                                      case 1: delay_us(10);  num11--; while(~button3);    break;      //时减一
 163   4                                      case 2: delay_us(10);  num22--; while(~button3);        break;  //分减一
 164   4                                      case 3: delay_us(10);  num33--; while(~button3);        break;  //秒减一
 165   4                                      default: break;
 166   4                              }       
 167   3                      }
 168   2                      else
 169   2                      {
 170   3                              switch(button_num1)
 171   3                              {
 172   4                                      case 0:         break;
 173   4                                      case 1: delay_us(10);  num1--; while(~button3); break;  //时减一
 174   4                                      case 2: delay_us(10);  num2--; while(~button3); break;  //分减一
 175   4                                      case 3: delay_us(10);  num3--; while(~button3); break;  //秒减一
 176   4                                      default: break;
 177   4                              }
 178   3                      }
 179   2                      
C51 COMPILER V9.01   CLOCK                                                                 03/05/2021 19:39:37 PAGE 4   

 180   2                      if(num3 == -1) num3 = 23;       //超出归零
 181   2                      if(num2 == -1) num2 = 59;
 182   2                      if(num1 == -1) num1 = 59;
 183   2                      if(num33 == -1) num33 = 23;     //超出归零
 184   2                      if(num22 == -1) num22 = 59;
 185   2                      if(num11 == -1) num11 = 59;
 186   2              }
 187   1      }
 188          
 189          /*******************************************************************************
 190          * 函 数 名         : KeyDown
 191          * 函数功能                 : 检测有按键按下并读取键值
 192          * 输    入         : 无
 193          * 输    出         : 无
 194          *******************************************************************************/
 195          void KeyDown(void)
 196          {
 197   1              char a=0;
 198   1              GPIO_KEY=0x0f;
 199   1              if(GPIO_KEY!=0x0f)//读取按键是否按下
 200   1              {
 201   2                      delay(1000);//延时10ms进行消抖
 202   2                      if(GPIO_KEY!=0x0f)//再次检测键盘是否按下
 203   2                      {       
 204   3                              //测试列
 205   3                              GPIO_KEY=0X0F;
 206   3                              switch(GPIO_KEY)
 207   3                              {
 208   4                                      case(0X07):     KeyValue=0;break;
 209   4                                      case(0X0b):     KeyValue=1;break;
 210   4                                      case(0X0d): KeyValue=2;break;
 211   4                                      case(0X0e):     KeyValue=3;break;
 212   4                              }
 213   3                              //测试行
 214   3                              GPIO_KEY=0XF0;
 215   3                              switch(GPIO_KEY)
 216   3                              {
 217   4                                      case(0X70):     KeyValue=KeyValue;break;
 218   4                                      case(0Xb0):     KeyValue=KeyValue+4;break;
 219   4                                      case(0Xd0): KeyValue=KeyValue+8;break;
 220   4                                      case(0Xe0):     KeyValue=KeyValue+12;break;
 221   4                              }
 222   3                              while((a<50)&&(GPIO_KEY!=0xf0))  //检测按键松手检测
 223   3                              {
 224   4                                      delay(1000);
 225   4                                      a++;
 226   4                              }
 227   3                      }
 228   2              }
 229   1      }
 230          
 231          /***********************************************************
 232          *函数名         ：display
 233          *功能           ：对传如的时分秒进行处理计算，转化为七段数码管要显示的值
 234          *参数           ：num1 秒       num2 分   num3 时
 235          ************************************************************/
 236          void display(u16 num1,u16 num2,u16 num3)
 237          {
 238   1              static u16 shi1,ge1,shi2,ge2,shi3,ge3;
 239   1              shi1=num1/10;
 240   1              ge1=num1%10;
 241   1      
C51 COMPILER V9.01   CLOCK                                                                 03/05/2021 19:39:37 PAGE 5   

 242   1              shi2=num2/10;
 243   1              ge2=num2%10;
 244   1      
 245   1              shi3=num3/10;
 246   1              ge3=num3%10;
 247   1      
 248   1              LSA=1;
 249   1              LSB=1;
 250   1              LSC=1;//显示第8位
 251   1              P0=smgduan[shi3];         
 252   1      //      P0=0x00;        
 253   1              delay(100);
 254   1      
 255   1              LSA=0;
 256   1              LSB=1;
 257   1              LSC=1;//显示第7位
 258   1              P0=smgduan[ge3];
 259   1      //      P0=0x00; 
 260   1              delay(100);     
 261   1      
 262   1              LSA=1;
 263   1              LSB=0;
 264   1              LSC=1;//显示第6位
 265   1              P0=0x40;
 266   1      //      P0=0x00; 
 267   1              delay(100);     
 268   1      
 269   1              LSA=0;
 270   1              LSB=0;
 271   1              LSC=1;//显示第5位
 272   1              P0=smgduan[shi2];
 273   1      //      P0=0x00;
 274   1              delay(100);     
 275   1      
 276   1              LSA=1;
 277   1              LSB=1;
 278   1              LSC=0;//显示第4位
 279   1              P0=smgduan[ge2];
 280   1      //      P0=0x00; 
 281   1              delay(100);     
 282   1              
 283   1              LSA=0;
 284   1              LSB=1;
 285   1              LSC=0;//显示第3位
 286   1              P0=0x40;
 287   1      //      P0=0x00; 
 288   1              delay(100);     
 289   1              
 290   1              LSA=1;
 291   1              LSB=0;
 292   1              LSC=0;//显示第2位
 293   1              P0=smgduan[shi1];
 294   1      //      P0=0x00; 
 295   1              delay(100);
 296   1              
 297   1              LSA=0;
 298   1              LSB=0;
 299   1              LSC=0;//显示第1位
 300   1              P0=smgduan[ge1];
 301   1      //      P0=0x00; 
 302   1              delay(100);     
 303   1      
C51 COMPILER V9.01   CLOCK                                                                 03/05/2021 19:39:37 PAGE 6   

 304   1                              
 305   1      }
 306          
 307          /*******************************************************************************
 308          * 函数名         :UsartInit()
 309          * 函数功能                 :设置串口
 310          * 输入           : 无
 311          * 输出           : 无
 312          *******************************************************************************/
 313          void UsartInit()
 314          {
 315   1              SCON=0X50;                      //设置为工作方式1
 316   1              TMOD=0X20;                      //设置计数器工作方式2
 317   1              PCON=0X80;                      //波特率加倍
 318   1              TH1=0XF3;                               //计数器初始值设置，注意波特率是4800的
 319   1              TL1=0XF3;
 320   1              ES=1;                                           //打开接收中断
 321   1              EA=1;                                           //打开总中断
 322   1              TR1=1;                                  //打开计数器
 323   1      }
 324          
 325          /*******************************************************************************
 326          * 函 数 名         : Timer0Init
 327          * 函数功能                 : 定时器0初始化
 328          * 输    入         : 无
 329          * 输    出         : 无
 330          *******************************************************************************/
 331          void TimerInit()
 332          {
 333   1              TMOD|=0X01;//选择为定时器0模式，工作方式1，仅用TR0打开启动。
 334   1              TH0=0X3C;       //给定时器赋初值，定时50ms
 335   1              TL0=0XB0;       //0X3CB0的十进制是15536 从15536计数到65536计数50000次 即50000us=50ms    
 336   1              ET0=1;//打开定时器0中断允许
 337   1              EA=1;//打开总中断
 338   1              TR0=1;//打开定时器      
 339   1      
 340   1      }
 341          
 342          /*******************************************************************************
 343          * 函 数 名       : main
 344          * 函数功能               : 主函数
 345          * 输    入       : 无
 346          * 输    出       : 无
 347          *******************************************************************************/
 348          void main()
 349          {       
 350   1              UsartInit();
 351   1              TimerInit();
 352   1              
 353   1              while(1)
 354   1              {
 355   2                      //按键扫描
 356   2                      KeyDown();
 357   2                      button_up_down();
 358   2                      button_setting();
 359   2                      
 360   2                              
 361   2                      if(i>=20)//20个50毫秒即一秒                     //此处条件别卡太死，容易超出使程序无法进入
 362   2                      {
 363   3                              i=0;
 364   3                              num1++;
 365   3                              if(num1==60)
C51 COMPILER V9.01   CLOCK                                                                 03/05/2021 19:39:37 PAGE 7   

 366   3                              {
 367   4                                      num1=0;
 368   4                                      num2++;
 369   4                                      if(num2==60)//定时一小时自动清零
 370   4                                      {
 371   5                                              num2=0;
 372   5                                              num3++;
 373   5                                              if(num3==24)
 374   5                                              {
 375   6                                                      num3=0;
 376   6                                              }
 377   5                                      }
 378   4                                      
 379   4                              }
 380   3                      }
 381   2                      if(KeyValue == 1 || receive5 == 1)
 382   2                      {
 383   3                              display(num11,num22,num33);     
 384   3                      }
 385   2                      else
 386   2                      {
 387   3                              display(num1,num2,num3); 
 388   3                      }
 389   2                      
 390   2                      //闹钟
 391   2                      if(num1==num11&&num2==num22&&num3==num33)
 392   2                      {
 393   3                              beep = 1;       
 394   3                              if(num1>num11+3)
 395   3                                      beep = 0;
 396   3                      }                
 397   2              }
 398   1      }
 399          
 400          /*******************************************************************************
 401          * 函 数 名       : Timer0
 402          * 函数功能               : 中断函数，计时，方式1需手动重装载值
 403          * 参数                   : 无
 404          *******************************************************************************/                
 405          void Timer0() interrupt 1
 406          {
 407   1               TH0=0x3c;       //手动重装载
 408   1               TL0=0xb0;
 409   1               i++;           
 410   1      }
 411          
 412          /*******************************************************************************
 413          * 函数名         : Usart() interrupt 4
 414          * 函数功能                : 串口通信中断函数
 415          * 输入           : 无
 416          * 输出           : 无
 417          *******************************************************************************/
 418          void Usart() interrupt 4
 419          {
 420   1              u8 receiveData;
 421   1      
 422   1              receiveData=SBUF;//出去接收到的数据
 423   1              RI = 0;//清除接收中断标志位
 424   1              SBUF=receiveData;//将接收到的数据放入到发送寄存器
 425   1              while(!TI);                      //等待发送数据完成
 426   1              TI=0;
 427   1                                                               //清除发送完成标志位
C51 COMPILER V9.01   CLOCK                                                                 03/05/2021 19:39:37 PAGE 8   

 428   1      
 429   1              switch(receiveData)
 430   1              {
 431   2                       case '1': receive1=1;break;
 432   2                       case '2': receive2=1;break;
 433   2                       case '3': receive3=1;break;
 434   2                       case '4': receive4=1;break;
 435   2                       case '5': receive5=1;break;
 436   2                       default:break;
 437   2              }
 438   1              receiveData = 0;
 439   1      
 440   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1240    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     33       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
